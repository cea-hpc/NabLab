name: Continuous Integration - Build & Tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events on all branches
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - '**'
    tags:
      - '*'
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: nablab/execution-env:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Cache Maven packages # see https://github.com/actions/cache for more details
        uses: actions/cache@v2
        with:
          path: /root/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Checkout NabLab code
        uses: actions/checkout@v2
      
      # Set environment variable for tests execution
      - name: Set environment variable
        run: echo "CI=true" >> $GITHUB_ENV

      # Runs the maven build (build + tests)
      - name: Run maven build
        if: startsWith(github.ref, 'refs/tags/v') != true
        run: mvn clean;mvn verify -U
      
      # Runs the maven build (build + tests + updatesite + products)
      - name: Run maven build and updatesite profiles
        if: startsWith(github.ref, 'refs/tags/v')
        run: mvn clean -P build,updatesite;mvn -B -U verify -P build,updatesite
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Tar tmp tests directory in case of error
      - name: Tar nablatestdir.tgz
        if: failure()
        shell: bash
        run: tar -C /tmp cvfz ${GITHUB_WORKSPACE}/nablatestdir.tgz nablatest-*
        
      # Upload nablatestdir.tgz artifact
      - name: Upload nablatestdir.tgz
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: nablatestdir
          path: ${GITHUB_WORKSPACE}/nablatestdir.tgz
          retention-days: 1

      # Deploy maven artifacts to github
      - name: Deploy maven artifact to github (fr.cea.nabla)
        if: startsWith(github.ref, 'refs/tags/v')
        run: mvn -B deploy:deploy-file --settings .github/workflows/settings.xml -Dfile=plugins/fr.cea.nabla/target/fr.cea.nabla-0.4.3-SNAPSHOT.jar -Dversion=0.4.3 -Durl=https://maven.pkg.github.com/cea-hpc/NabLab -DrepositoryId=github  -DgroupId=fr.cea.nabla -DartifactId=fr.cea.nabla
        env:
          USERNAME: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy maven artifact to github (fr.cea.nabla.ir)
        if: startsWith(github.ref, 'refs/tags/v')
        run: mvn -B deploy:deploy-file --settings .github/workflows/settings.xml -Dfile=plugins/fr.cea.nabla.ir/target/fr.cea.nabla.ir-0.4.3-SNAPSHOT.jar -Dversion=0.4.3 -Durl=https://maven.pkg.github.com/cea-hpc/NabLab -DrepositoryId=github  -DgroupId=fr.cea.nabla -DartifactId=fr.cea.nabla.ir
        env:
          USERNAME: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy maven artifact to github (fr.cea.nabla.javalib)
        if: startsWith(github.ref, 'refs/tags/v')
        run: mvn -B deploy:deploy-file --settings .github/workflows/settings.xml -Dfile=plugins/fr.cea.nabla.javalib/target/fr.cea.nabla.javalib-0.4.3-SNAPSHOT.jar -Dversion=0.4.3 -Durl=https://maven.pkg.github.com/cea-hpc/NabLab -DrepositoryId=github  -DgroupId=fr.cea.nabla -DartifactId=fr.cea.nabla.javalib
        env:
          USERNAME: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create a Github Release
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            ./releng/fr.cea.nabla.updatesite/target/fr.cea.nabla.updatesite-*.zip
            ./releng/fr.cea.nabla.updatesite/target/products/*.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
