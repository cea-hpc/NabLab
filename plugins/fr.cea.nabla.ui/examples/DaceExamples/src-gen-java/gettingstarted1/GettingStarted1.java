/* DO NOT EDIT THIS FILE - it is machine generated */

package gettingstarted1;

import java.io.FileReader;
import java.io.IOException;
import java.util.stream.IntStream;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.JsonElement;

import fr.cea.nabla.javalib.*;
import fr.cea.nabla.javalib.mesh.*;

public final class GettingStarted1
{
	public final static class Options
	{
		public String nonRegression;

		public void jsonInit(final String jsonContent)
		{
			final Gson gson = new Gson();
			final JsonObject o = gson.fromJson(jsonContent, JsonObject.class);
		}
	}

	// Mesh and mesh variables
	private final CartesianMesh2D mesh;
	@SuppressWarnings("unused")
	private final int nbNodes;

	// User options
	private final Options options;

	// Global variables
	protected final double stopTime;
	protected final int maxIterations;
	protected double t;
	protected double deltat;
	protected double[][] X;
	protected double[] array1;
	protected final double[] array2;

	public GettingStarted1(CartesianMesh2D aMesh, Options aOptions)
	{
		// Mesh and mesh variables initialization
		mesh = aMesh;
		nbNodes = mesh.getNbNodes();

		// User options
		options = aOptions;

		// Initialize variables with default values
		stopTime = 0.2;
		maxIterations = 20000;
		array1 = new double[] {0.0, 0.0, 0.0, 0.0, 0.0};
		array2 = new double[] {1.0, 2.0, 3.0, 4.0, 5.0};

		// Allocate arrays
		X = new double[nbNodes][2];

		// Copy node coordinates
		double[][] gNodes = mesh.getGeometry().getNodes();
		IntStream.range(0, nbNodes).parallel().forEach(rNodes ->
		{
			X[rNodes][0] = gNodes[rNodes][0];
			X[rNodes][1] = gNodes[rNodes][1];
		});
	}

	/**
	 * Job addJob called @0.0 in simulate method.
	 * In variables: array1, array2
	 * Out variables: array1
	 */
	protected void addJob()
	{
		array1 = ArrayOperations.multiply(array2, array1);
	}

	public void simulate()
	{
		System.out.println("Start execution of gettingStarted1");
		System.out.println("End of execution of gettingStarted1");
	}

	public static void main(String[] args) throws IOException
	{
		if (args.length == 1)
		{
			final String dataFileName = args[0];
			final Gson gson = new Gson();
			final JsonObject o = gson.fromJson(new FileReader(dataFileName), JsonObject.class);

			// Mesh instanciation
			assert(o.has("mesh"));
			CartesianMesh2D mesh = new CartesianMesh2D();
			mesh.jsonInit(o.get("mesh").toString());

			// Module instanciation(s)
			GettingStarted1.Options gettingStarted1Options = new GettingStarted1.Options();
			if (o.has("gettingStarted1")) gettingStarted1Options.jsonInit(o.get("gettingStarted1").toString());
			GettingStarted1 gettingStarted1 = new GettingStarted1(mesh, gettingStarted1Options);

			// Start simulation
			gettingStarted1.simulate();
		}
		else
		{
			System.err.println("[ERROR] Wrong number of arguments: expected 1, actual " + args.length);
			System.err.println("        Expecting user data file name, for example GettingStarted1.json");
			System.exit(1);
		}
	}
};
