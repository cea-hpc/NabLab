/* DO NOT EDIT THIS FILE - it is machine generated */

#ifndef __EXPLICITHEATEQUATIONMODULE_H_
#define __EXPLICITHEATEQUATIONMODULE_H_

#include <arcane/utils/Array.h>
#include "ExplicitHeatEquation_axl.h"
#include "CartesianMesh2D.h"

using namespace Arcane;

/******************** Free functions declarations ********************/

namespace explicitheatequationfreefuncs
{
Real norm(ConstArrayView<Real> a);
Real dot(ConstArrayView<Real> a, ConstArrayView<Real> b);
Real det(Real2 a, Real2 b);
ConstArrayView<Real> sumR1(ConstArrayView<Real> a, ConstArrayView<Real> b);
Real minR0(Real a, Real b);
Real sumR0(Real a, Real b);
Real prodR0(Real a, Real b);
}

/******************** Module declaration ********************/

class ExplicitHeatEquationModule
: public ArcaneExplicitHeatEquationObject
{
public:
	ExplicitHeatEquationModule(const ModuleBuildInfo& mbi)
	: ArcaneExplicitHeatEquationObject(mbi) {}
	~ExplicitHeatEquationModule() {}

	virtual void init() override;
	virtual void compute() override;

	VersionInfo versionInfo() const override { return VersionInfo(1, 0, 0); }

private:
	void computeFaceLength();
	void computeTn();
	void computeV();
	void initD();
	void initTime();
	void initXc();
	void updateU();
	void computeDeltaTn();
	void computeFaceConductivity();
	void initU();
	void setUpTimeLoopN();
	void computeAlphaCoeff();

private:
	CartesianMesh2D* m_mesh;
};

#endif
