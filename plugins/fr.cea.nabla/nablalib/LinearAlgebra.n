/*******************************************************************************
 * Copyright (c) 2022 CEA
 * This program and the accompanying materials are made available under the 
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 * Contributors: see AUTHORS file
 *******************************************************************************/
linearalgebra extension LinearAlgebra;

/*
 *  Initial guess API is not provided for JAVA backend
 */
// Solves Ax=b
def solveLinearSystem: x | real[x, x] × real[x] → real[x];

// Solves Ax=b, given x0
def solveLinearSystem: x | real[x, x] × real[x] × real[x] → real[x];

// Solves C^-1(Ax)=C^-1 b
def solveLinearSystem: x | real[x, x] × real[x] × real[x, x] → real[x];

// Solves Ax=b, given x0 with iterations threshold
def solveLinearSystem: x | real[x, x] × real[x] × real[x] × int → real[x];

// Solves C^-1(Ax)=C^-1 b, given x0
def solveLinearSystem: x | real[x, x] × real[x] × real[x, x] × real[x] → real[x];

// Solves Ax=b, given x0 with iterations and tolerance thresholds 
def solveLinearSystem: x | real[x, x] × real[x] × real[x] × int × real → real[x];

// Solves C^-1(Ax)=C^-1 b, given x0 with iterations threshold
def solveLinearSystem: x | real[x, x] × real[x] × real[x, x] × real[x] × int → real[x];

// Solves C^-1(Ax)=C^-1 b, given x0 with iterations and tolerance thresholds
def solveLinearSystem: x | real[x, x] × real[x] × real[x, x] × real[x] × int × real → real[x];
