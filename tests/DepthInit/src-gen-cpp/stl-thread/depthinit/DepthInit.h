/* DO NOT EDIT THIS FILE - it is machine generated */

#ifndef __DEPTHINIT_H_
#define __DEPTHINIT_H_

#include <fstream>
#include <iomanip>
#include <type_traits>
#include <limits>
#include <utility>
#include <cmath>
#include <rapidjson/document.h>
#include "nablalib/utils/Utils.h"
#include "nablalib/utils/Timer.h"
#include "nablalib/types/Types.h"
#include "nablalib/utils/stl/Parallel.h"
#include "CartesianMesh2D.h"
#include "BathyLib.h"

using namespace nablalib::utils;
using namespace nablalib::types;
using namespace nablalib::utils::stl;

/******************** Free functions declarations ********************/

namespace depthinitfreefuncs
{
double two();
}

/******************** Module declaration ********************/

class DepthInit
{
public:
	DepthInit(CartesianMesh2D& aMesh);
	~DepthInit();

	void jsonInit(const char* jsonContent);

	void simulate();
	void initFromFile() noexcept;

private:
	// Mesh and mesh variables
	CartesianMesh2D& mesh;
	size_t nbNodes, nbCells;

	// Options and global variables
	BathyLib bathyLib;
	static constexpr double t = 0.0;
	int maxIter;
	double maxTime;
	double deltat;
	std::vector<RealArray1D<2>> X;
	std::vector<double> eta;

	// Timers
	Timer globalTimer;
	Timer cpuTimer;
	Timer ioTimer;
};

#endif
