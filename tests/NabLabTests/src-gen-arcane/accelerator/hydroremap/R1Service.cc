/* DO NOT EDIT THIS FILE - it is machine generated */

#include "R1Service.h"
#include <arcane/Concurrency.h>
#include <arcane/ITimeLoopMng.h>

using namespace Arcane;

/*** Module/Service **********************************************************/

R1Service::R1Service(const ServiceBuildInfo& bi)
: ArcaneR1Object(bi)
, m_default_queue(subDomain()->acceleratorMng()->defaultQueue())
{}

/**
 * Job rj1 called @2.0 in simulate method.
 * In variables: hv1
 * Out variables: hv4
 */
void R1Service::rj1()
{
	auto command = makeCommand(m_default_queue);
	auto in_hv1 = ax::viewIn(command, m_hv1);
	auto out_hv4 = ax::viewOut(command, m_hv4);
	command << RUNCOMMAND_ENUMERATE(Cell, cCells, allCells())
	{
		out_hv4[cCells] = in_hv1[cCells] * 2.0;
	};
}

/**
 * Job rj2 called @3.0 in simulate method.
 * In variables: hv4
 * Out variables: rv3
 */
void R1Service::rj2()
{
	auto command = makeCommand(m_default_queue);
	auto in_hv4 = ax::viewIn(command, m_hv4);
	auto out_rv3 = ax::viewOut(command, m_rv3);
	command << RUNCOMMAND_ENUMERATE(Cell, cCells, allCells())
	{
		out_rv3[cCells] = in_hv4[cCells] * 3.0;
	};
}

ARCANE_REGISTER_SERVICE_R1(R1, R1Service);
