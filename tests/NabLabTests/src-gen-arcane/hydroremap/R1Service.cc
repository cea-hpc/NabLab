/* DO NOT EDIT THIS FILE - it is machine generated */

#include "R1Service.h"
#include <arcane/Concurrency.h>
#include <arcane/ITimeLoopMng.h>

using namespace Arcane;

/*** Module/Service **********************************************************/

R1Service::R1Service(const ServiceBuildInfo& bi)
: ArcaneR1Object(bi)
{}

/**
 * Job rj1 called @2.0 in simulate method.
 * In variables: hv1
 * Out variables: hv4
 */
void R1Service::rj1()
{
	arcaneParallelForeach(allCells(), [&](CellVectorView view)
	{
		ENUMERATE_CELL(cCells, view)
		{
			m_hv4[cCells] = m_hv1[cCells] * 2.0;
		}
	});
}

/**
 * Job rj2 called @3.0 in simulate method.
 * In variables: hv4
 * Out variables: rv3
 */
void R1Service::rj2()
{
	arcaneParallelForeach(allCells(), [&](CellVectorView view)
	{
		ENUMERATE_CELL(cCells, view)
		{
			m_rv3[cCells] = m_hv4[cCells] * 3.0;
		}
	});
}

ARCANE_REGISTER_SERVICE_R1(R1, R1Service);
