/* DO NOT EDIT THIS FILE - it is machine generated */

#ifndef __ITERATIONMODULE_H_
#define __ITERATIONMODULE_H_

#include <arcane/utils/NumArray.h>
#include <arcane/datatype/RealArrayVariant.h>
#include <arcane/datatype/RealArray2Variant.h>
#include <arcane/IParallelMng.h>
#include "Iteration_axl.h"
#include "CartesianMesh2D.h"

using namespace Arcane;

/*** Free functions **********************************************************/

namespace iterationfreefuncs
{
	const bool assertEquals(const Real expected, const Real actual);
}

/*** Module/Service **********************************************************/

class IterationModule
: public ArcaneIterationObject
{
public:
	IterationModule(const ModuleBuildInfo& mbi);
	~IterationModule() {}

	// entry points
	virtual void init() override;
	virtual void executeTimeLoopN() override;

	VersionInfo versionInfo() const override { return VersionInfo(1, 0, 0); }

public:
	// jobs
	virtual void computeTn();
	virtual void iniTime();
	virtual void iniVk();
	virtual void iniVn();
	virtual void setUpTimeLoopK();
	virtual void updateVk();
	virtual void updateVl();
	virtual void executeTimeLoopK();
	virtual void setUpTimeLoopN();
	virtual void tearDownTimeLoopK();
	virtual void iniVl();
	virtual void oracleVk();
	virtual void setUpTimeLoopL();
	virtual void executeTimeLoopL();
	virtual void tearDownTimeLoopL();
	virtual void oracleVl();
	virtual void updateVn();
	virtual void oracleVn();

private:
	// mesh attributes
	CartesianMesh2D* m_mesh;

	// other attributes
	Int32 m_n;
	Int32 m_k;
	Int32 m_l;
	static constexpr Real m_maxTime = 0.1;
	static constexpr Real m_deltat = 1.0;
	Real m_t_n;
	Real m_t_nplus1;
	Real m_t_n0;
	static constexpr Int32 m_maxIterN = 10;
	static constexpr Int32 m_maxIterK = 6;
	static constexpr Int32 m_maxIterL = 7;
};

#endif
