/* DO NOT EDIT THIS FILE - it is machine generated */

#ifndef __R1_H_
#define __R1_H_

#include <fstream>
#include <iomanip>
#include <type_traits>
#include <limits>
#include <utility>
#include <cmath>
#include <rapidjson/document.h>
#include <omp.h>
#include "nablalib/utils/Utils.h"
#include "nablalib/utils/Timer.h"
#include "nablalib/types/Types.h"
#include "CartesianMesh2D.h"
#include "Hydro.h"

using namespace nablalib::utils;
using namespace nablalib::types;


/******************** Module declaration ********************/

class R1
{
	friend class Hydro;
	friend class R2;


private:
	// Mesh and mesh variables
	CartesianMesh2D& mesh;
	size_t nbCells;

	// Main module
	Hydro* mainModule;


	// Timers
	Timer globalTimer;
	Timer cpuTimer;
	Timer ioTimer;
	

public:
	R1(CartesianMesh2D& aMesh);
	~R1();

	void jsonInit(const char* jsonContent);

	inline void setMainModule(Hydro* value)
	{
		mainModule = value,
		mainModule->r1 = this;
	}

	void simulate();
	void rj1() noexcept;
	void rj2() noexcept;

	// Options and global variables.
	// Module variables are public members of the class to be accessible from Python.
	std::vector<double> rv3;
};

#endif
