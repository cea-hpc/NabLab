/* DO NOT EDIT THIS FILE - it is machine generated */

package variables;

import java.io.FileReader;
import java.io.IOException;
import java.util.stream.IntStream;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.JsonElement;

import fr.cea.nabla.javalib.*;
import fr.cea.nabla.javalib.mesh.*;

public final class Variables
{
	// Mesh and mesh variables
	private final CartesianMesh2D mesh;
	@SuppressWarnings("unused")
	private final int nbNodes, maxCellsOfNode;

	// Option and global variables
	final double maxTime;
	final int maxIter;
	final double deltat;
	double t;
	final int dim;
	double[] v1;
	double[] v2;
	double[][] X;
	int unknownDim;
	double[] dynamicArray;

	public Variables(CartesianMesh2D aMesh)
	{
		// Mesh and mesh variables initialization
		mesh = aMesh;
		nbNodes = mesh.getNbNodes();
		maxCellsOfNode = CartesianMesh2D.MaxNbCellsOfNode;

		// Initialize variables with default values
		maxTime = 0.1;
		maxIter = 500;
		deltat = 1.0;
		dim = 2;

		// Allocate arrays
		v1 = new double[2];
		v2 = new double[dim];
		X = new double[nbNodes][dim];
		dynamicArray = new double[unknownDim];

		// Copy node coordinates
		double[][] gNodes = mesh.getGeometry().getNodes();
		IntStream.range(0, nbNodes).parallel().forEach(rNodes ->
		{
			X[rNodes][0] = gNodes[rNodes][0];
			X[rNodes][1] = gNodes[rNodes][1];
		});
	}

	public void jsonInit(final String jsonContent)
	{
		final Gson gson = new Gson();
		final JsonObject o = gson.fromJson(jsonContent, JsonObject.class);
	}

	/**
	 * Job newVar called @1.0 in simulate method.
	 * In variables: 
	 * Out variables: 
	 */
	protected void newVar()
	{
		IntStream.range(0, nbNodes).parallel().forEach(rNodes -> 
		{
			final int rId = rNodes;
			final int localNbCells = mesh.getCellsOfNode(rId).length;
			double[] tmp = new double[localNbCells];
		});
	}

	public void simulate()
	{
		System.out.println("Start execution of variables");
		newVar(); // @1.0
		System.out.println("End of execution of variables");
	}

	public static void main(String[] args) throws IOException
	{
		if (args.length == 1)
		{
			final String dataFileName = args[0];
			final Gson gson = new Gson();
			final JsonObject o = gson.fromJson(new FileReader(dataFileName), JsonObject.class);

			// Mesh instanciation
			assert(o.has("mesh"));
			CartesianMesh2D mesh = new CartesianMesh2D();
			mesh.jsonInit(o.get("mesh").toString());

			// Module instanciation(s)
			Variables variables = new Variables(mesh);
			if (o.has("variables")) variables.jsonInit(o.get("variables").toString());

			// Start simulation
			variables.simulate();
		}
		else
		{
			System.err.println("[ERROR] Wrong number of arguments: expected 1, actual " + args.length);
			System.err.println("        Expecting user data file name, for example Variables.json");
			System.exit(1);
		}
	}
};
